@use 'variables.scss';

// header buttons

.main-button {
    font-size: clamp(1rem, 3vw, 1.5rem);
    border-radius: variables.$border-radius;
    max-width: 100%;
    width: 100%;
    transition: all 250ms ease-in-out !important;

    @media (min-width: variables.$small-med-breakpoint) {
        max-width: clamp(13rem, 36vw, 17rem);
    }
    
    a {
        padding: 1rem .7rem;
        height: 100%;
        display: flex;
        justify-content: center;
        color: variables.$clr-black-900 !important;


        svg {
            margin-right: clamp(0.6rem, 2vw, 1rem);
            height: auto;
            width: clamp(.9rem, 3vw, 1.5rem);
        }
    }
}

.main-button:hover, .main-button:focus {
    box-shadow: variables.$shadow-hover;
    transform: scale(1.05);
    filter: brightness(1.05);

    a {
        color: variables.$clr-black-900 !important; 
    }
}


.main-button.accent {
    background-color: variables.$clr-accent-200;
}

.main-button.no-accent {
    background-color: variables.$clr-black-400;
}

// project

.project {
    background-color: variables.$clr-black-100;
    display: grid;
    grid-template-columns: repeat(1, 1fr);
    padding: 5vh 7vw;
    gap: 2rem;
    align-items: center;
    border-radius: 3px;

    @media (min-width: variables.$large-breakpoint) {
        padding: 4rem 7rem;
    }

    @media (min-width: variables.$large-med-breakpoint) {
        grid-template-columns: repeat(2, 1fr);
        gap: 4rem;
    }
}

.wide {
    grid-template-columns: repeat(1, 1fr);
}

.sub-heading {
    letter-spacing: 0.2em;
    font-weight: variables.$ff-medium;
    color: variables.$clr-accent-500;
    text-transform: uppercase;
    font-size: 1rem;
    margin-bottom: 1rem;
    text-align: center;

    @media (min-width: variables.$large-med-breakpoint) {
        text-align: start;
    }
}

.project-description {
    font-size: 1.5rem;
    margin-bottom: 1rem;
    text-align: center;
    display: flex;
    align-items: center;

    a {
        display: flex;
        align-items: center;

        svg {
            margin-right: .6rem;
        }
    }

    @media (min-width: variables.$large-med-breakpoint) {
        text-align: start;
    }
}

.about-caption {
    font-size: 1.25rem;
    line-height: 1.4;
    text-align: center;

    @media (min-width: variables.$large-med-breakpoint) {
        text-align: start;
    }
}

.span-2 {
    grid-template-columns: repeat(1, 1fr);
}

.project-link {
    font-weight: variables.$ff-medium;
    font-size: 1rem;
    display: flex;
    align-items: center;
    width: max-content;
    justify-content: center;
    padding-right: 6px;
    margin: auto;

    @media (min-width: variables.$large-med-breakpoint) {
        text-align: start;
        width: max-content;
        margin: 0;
    }

    svg {
        fill: variables.$clr-accent-500;
        height: auto;
        transition: 0.3s ease-out;
    }
}

.project-link:hover svg, .project-link:focus svg{
    transform: translateX(25%);
}

.right {
    display: flex;
    justify-content: center;
    flex-direction: column;

    @media (min-width: variables.$large-med-breakpoint) {
        justify-content: flex-end;

        li {
            justify-content: flex-start !important;
        }
    }

    img {
        height: auto;
        max-height: 300px;
        max-width: 100%;
        object-fit: contain;
    }

    li {
        justify-content: center;
    }
}

.left {

    ul {

        li {
            justify-content: center;
        }
    }
    }
    

.inline {
    align-items: flex-start !important;
}

.width > .projects-big:not(:first-child) {
    margin-top: 2rem;
}

.width {
    width: min(100rem, 90%);
}

body {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
}

.scrollup-button {
    position: fixed;
    right: 15px;
    bottom: 15px;
    background-color: variables.$clr-accent-500;
    color: variables.$clr-black-100;
    padding: .5rem;
    border-radius: 50%;
    width: 3rem;
    height: auto;
    display: flex;
    align-items: center;
    transition: transform .5s ease-out;
    z-index: 2;
    transition: all .5s;
}

.scrollup-button.show {
    transform: translateY(0%);
}

.scrollup-button.hide {
    transform: translateY(150%);
}

.scrollup-button:hover, .scrollup-button:focus {
    background-color: variables.$clr-black-100;
    path{
        color: variables.$clr-accent-500 !important;
    
    }
}

.box-shadow {
    box-shadow: variables.$shadow;
}

.drop-shadow {
    filter: drop-shadow(variables.$shadow)
}

.skip-nav {
    position: absolute;
    left: 1rem;
    top: 0;
    transform: translateY(-120%);
    background-color: variables.$clr-accent-200;
    padding: .5rem .7rem;
    transition: transform ease-out 100ms;
}

.skip-nav:focus {
    transform: translateY(0);
    color: variables.$clr-black-900;
}

.fade-in {
    opacity: 0;
    transform: translateY(5%);
    transition: opacity 600ms ease-out, transform 300ms ease-in;
}

.fade-in.appear {
    transform: translateY(0);
    opacity: 1;
}

ul {
    list-style-type: none;
}

.contact-form {
    .input-field {
        display: flex;
        flex-direction: column;
        margin-bottom: 1rem;
    }

    input, textarea {
        padding: .7rem;
        background-color: variables.$clr-accent-200;
        border: none;
        border-radius: 3px;
        font-size: 1rem;
        color: black;
        font-family: variables.$ff-primary;
        resize: vertical;
        max-width: 100%;
        transition: all 0.3s ease-out;
        cursor: text;
    }

    input:focus, textarea:focus {
        box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.13), 0 0 0 0.3rem #d4e0ff80;
        outline: none;
    }

    input[type=submit] {
        cursor: pointer;
    }

    input[type=submit]:hover, input[type=submit]:focus {
        transform: scale(1.02);
        box-shadow: variables.$shadow-hover;
    }
}

